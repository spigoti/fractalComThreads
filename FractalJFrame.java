/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.univali.view;

import br.univali.model.FractalListener;
import br.univali.model.FractalTask;
import br.univali.model.FractalTaskCombo;
import br.univali.model.FractalTreeGenerator;
import br.univali.model.Segmento;
import br.univali.model.SinHanLoDeitelGenerator;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author 6200559
 */
public class FractalJFrame extends javax.swing.JFrame {

    /**
     * Creates new form teste2
     */
    private FractalTask fractalTask = new FractalTask(new SinHanLoDeitelGenerator());
    private FractalTask fractalTask2 = new FractalTask(new FractalTreeGenerator());
    private FractalTaskCombo fractalTaskCombo = new FractalTaskCombo(new SinHanLoDeitelGenerator(), new FractalTreeGenerator());

    private boolean multiThread = true;

    private Executor executor = multiThread ? Executors.newFixedThreadPool(2) : Executors.newSingleThreadExecutor();

    private int totalSementos = 0;

    private class Listener implements FractalListener {

        private final FractalComponent component;

        public Listener(FractalComponent component) {
            this.component = component;
        }

        @Override
        public void segmentosGerados(List<Segmento> segmentos) {
            totalSementos += segmentos.size();

            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(FractalJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            component.addSegmentos(segmentos);

        }

    }

    public FractalJFrame() {
        initComponents();

        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                fractalTask.getGenerator().setDimension(fractalComponent1.getWidth(), fractalComponent1.getHeight());
                fractalTask2.getGenerator().setDimension(fractalComponent2.getWidth()/2, fractalComponent2.getHeight());
                //fractalTaskCombo.setDimension(getWidth()/2, getHeight()/2);
            }
            
        });
        
        
        
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        Listener listener1 = new Listener(fractalComponent1);
        Listener listener2 = new Listener(fractalComponent2);

        fractalTask.addListener(listener1);
        fractalTask2.addListener(listener2);

        fractalTaskCombo.addListeners(listener1, listener2);

        if (multiThread) {
            executor.execute(fractalTask);
            executor.execute(fractalTask2);
        } else {
            executor.execute(fractalTaskCombo);
            //SwingUtilities.invokeLater(fractalTaskCombo);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelFractal1 = new javax.swing.JPanel();
        fractalComponent1 = new br.univali.view.FractalComponent();
        painelFractal2 = new javax.swing.JPanel();
        fractalComponent2 = new br.univali.view.FractalComponent();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 300));
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new java.awt.GridLayout(2, 2));

        painelFractal1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        painelFractal1.setLayout(new java.awt.BorderLayout());
        painelFractal1.add(fractalComponent1, java.awt.BorderLayout.CENTER);

        getContentPane().add(painelFractal1);

        painelFractal2.setLayout(new java.awt.BorderLayout());
        painelFractal2.add(fractalComponent2, java.awt.BorderLayout.CENTER);

        getContentPane().add(painelFractal2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FractalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FractalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FractalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FractalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FractalJFrame frame = new FractalJFrame();
                frame.setVisible(true);

                Timer timer = new Timer(20000, (e) -> {
                    System.out.println("Segmentos gerados: " + frame.totalSementos);
                    System.exit(0);
                });
                timer.start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.univali.view.FractalComponent fractalComponent1;
    private br.univali.view.FractalComponent fractalComponent2;
    private javax.swing.JPanel painelFractal1;
    private javax.swing.JPanel painelFractal2;
    // End of variables declaration//GEN-END:variables
}
